service: () -> {
    addPet: (record {age:text; name:text; description:text; healthStatus:text; shelterId:text; breed:text; image:text; species:text}) -> (variant {Ok:record {id:text; age:text; name:text; description:text; healthStatus:text; adoptionStatus:text; shelterId:text; breed:text; image:text; species:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    addShelter: (record {img:text; name:text; email:text; phoneNumber:text; location:text}) -> (variant {Ok:record {id:text; img:text; "principal":principal; name:text; pets:vec text; email:text; phoneNumber:text; location:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    addUser: (record {name:text; email:text; address:text; phoneNumber:text}) -> (variant {Ok:record {id:text; "principal":principal; name:text; email:text; address:text; phoneNumber:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    changeAdoptionStatus: (record {id:text; status:text}) -> (variant {Ok:record {id:text; userPhoneNumber:text; status:text; userId:text; petId:text; reasonForAdoption:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    changeAdoptionStatusToCompleted: (record {id:text; status:text}) -> (variant {Ok:record {id:text; userPhoneNumber:text; status:text; userId:text; petId:text; reasonForAdoption:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    fileForAdoption: (record {userPhoneNumber:text; userId:text; petId:text; reasonForAdoption:text}) -> (variant {Ok:record {id:text; userPhoneNumber:text; status:text; userId:text; petId:text; reasonForAdoption:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    getAdoption: (text) -> (opt record {id:text; userPhoneNumber:text; status:text; userId:text; petId:text; reasonForAdoption:text}) query;
    getAdoptionRecords: () -> (vec record {id:text; userId:text; adoptionId:text; dateOfAdoption:text; shelterId:text; petId:text}) query;
    getAdoptions: () -> (vec record {id:text; userPhoneNumber:text; status:text; userId:text; petId:text; reasonForAdoption:text}) query;
    getPet: (text) -> (opt record {id:text; age:text; name:text; description:text; healthStatus:text; adoptionStatus:text; shelterId:text; breed:text; image:text; species:text}) query;
    getPets: () -> (vec record {id:text; age:text; name:text; description:text; healthStatus:text; adoptionStatus:text; shelterId:text; breed:text; image:text; species:text}) query;
    getShelter: (text) -> (opt record {id:text; img:text; "principal":principal; name:text; pets:vec text; email:text; phoneNumber:text; location:text}) query;
    getShelters: () -> (vec record {id:text; img:text; "principal":principal; name:text; pets:vec text; email:text; phoneNumber:text; location:text}) query;
    getUser: (text) -> (opt record {id:text; "principal":principal; name:text; email:text; address:text; phoneNumber:text}) query;
    getUsers: () -> (vec record {id:text; "principal":principal; name:text; email:text; address:text; phoneNumber:text}) query;
    updateAdoption: (record {id:text; userPhoneNumber:text; petId:text}) -> (variant {Ok:record {id:text; userPhoneNumber:text; status:text; userId:text; petId:text; reasonForAdoption:text}; Err:variant {InvalidPayload:text; NotFound:text}});
}
